FROM alpine:3.21.3

LABEL org.label-schema.schema-version = "1.0"
LABEL org.label-schema.maintainer="Luis Miguel Casado DÃ­az <luicasad@student.42barcelona.com>"
LABEL org.label-schema.version="11.4.5"
LABEL org.label-schema.description="A Docker image running php and word server on Alpine Linux."
LABEL org.label-schema.url="[https://github.com/luismiguelcasadodiaz/inception]"
LABEL org. label-schema.date="May 2025"

RUN apk add --no-cache   wget unzip php84-fpm php84-json php84-zlib php84-xml php84-xmlwriter php84-simplexml php84-pdo php84-phar php84-openssl \
    php84-pdo_mysql php84-mysqli php84-session \
    php84-gd php84-iconv php84-gmp php84-zip \
    php84-curl php84-opcache php84-ctype php84-apcu \
    php84-intl php84-bcmath php84-dom php84-mbstring php84-xmlreader && \
    rm -rf /var/cache/apk/*

# system group creation "addgroup -S" 
# Creates a group named nginx with a low GID (usually below 1000) to indicate 
# it's used for a system service, not a human user.
# Create a system user (withouy password, shell, home directory). "adduser -S"
# add it to group nginx "-G nginx"    
# This user is typically used to run daemons like the NGINX worker process, 
# without login capabilities or user environment. 
#
# Create the web root directory
#
# Set appropriate permissions (optional, but good practice)
# Assuming nginx user runs php-fpm, or www-data etc.
RUN addgroup -S nginx && adduser -S -G nginx nginx && \   
    mkdir -p /www && \
    chown -R nginx:nginx /www  && \
    chmod -R 755 /www

VOLUME /www
# Navigate to /www
# Download Wordress
# Unpack it
# Move all from    /www/wordpress/*  to /www
# Remove the empty wordpress directory
# Clean up downloaded archive


COPY contentserver_setup.sh /contentserver_setup.sh
RUN chmod +x /contentserver_setup.sh

# Copy PHP-FPM configuration that restricts request from 192.168.1.4
COPY www.conf /etc/php84/php-fpm.d/www.conf
#COPY index.php /www/index.php

EXPOSE 9000
ENTRYPOINT ["/contentserver_setup.sh"]

#The -F flag for php-fpm stands for "force to stay in foreground" or "no daemonize".
#Its purpose is very similar to the daemon off; directive for Nginx, 
# and it's particularly important in modern containerized environments like Docker.
